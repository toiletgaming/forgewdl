buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
	maven { url = "https://repo.spongepowered.org/repository/maven-public/" }
	maven { url = "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
	classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
	classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.3'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = "4.0.1.7"
group = "net.futureclient.forgewdl" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "forgewdl"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2847"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "stable_39"
    coreMod = "net.futureclient.forgewdl.ForgeWDL"
    makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    maven { url = "https://repo.spongepowered.org/repository/maven-public/" }
    maven { url = "https://oss.sonatype.org/content/groups/public/" }
    mavenCentral()
    jcenter()
}

dependencies {
    compile("org.spongepowered:mixin:0.7.4-SNAPSHOT") {
		exclude module: 'launchwrapper'
        	exclude module: 'guava'
        	exclude module: 'gson'
        	exclude module: 'commons-io'
        	exclude module: 'log4j-core'
    }
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.15.0'
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

shadowJar {
	dependencies {
		include(dependency("org.spongepowered:mixin"))
	}
	exclude "dummyThing"
	classifier = "release"
}

mixin {
	defaultObfuscationEnv searge
	add sourceSets.main, "mixins.forgewdl.refmap.json"
}

reobf {
	shadowJar {
		mappingType = "SEARGE"
		classpath = sourceSets.main.compileClasspath
	}
}

jar {
    manifest {
        attributes(
                'MixinConfigs': 'mixins.forgewdl.json',
                'tweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                'TweakOrder': 0,
                'FMLCorePluginContainsFMLMod': 'true',
                'FMLCorePlugin': 'net.futureclient.forgewdl.ForgeWDL',
                'ForceLoadAsMod': 'true',
                'FMLAT': 'forgewdl_at.cfg'
        )
    }
}

build.dependsOn(shadowJar)